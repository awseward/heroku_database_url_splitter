name: Release

on:
  push:
    tags:
    - '*'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: plan
      run: |
        export GIT_TAG="${GITHUB_REF/refs\/tags\//}"
        echo "GIT_TAG=${GIT_TAG}" >> "$GITHUB_ENV"
        echo "::set-output name=git_tag::${GIT_TAG}"

    - name: Cache choosenim
      id: cache-choosenim
      uses: actions/cache@v1
      with:
        path: ~/.choosenim
        key: ${{ runner.os }}-choosenim-stable
    - name: Cache nimble
      id: cache-nimble
      uses: actions/cache@v1
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-nimble-stable
    - uses: jiro4989/setup-nim-action@v1.3

    - id: tarball
      run: |
        TARBALL_FILENAME="$(./_build_release_tarball.sh "${GIT_TAG}")"
        ls -lah
        export TARBALL_FILENAME
        export TARBALL_FILEPATH="./${TARBALL_FILENAME}"

        echo "TARBALL_FILENAME=${TARBALL_FILENAME}" >> "$GITHUB_ENV"
        echo "TARBALL_FILEPATH=${TARBALL_FILEPATH}" >> "$GITHUB_ENV"

        echo "::set-output name=tarball_filename::${TARBALL_FILENAME}"
        echo "::set-output name=tarball_filepath::${TARBALL_FILEPATH}"

    - id: checksum
      run: |
        export TARBALL_CHECKSUM="$(shasum -a 256 "${TARBALL_FILENAME}" | cut -d ' ' -f1)"
        echo "TARBALL_CHECKSUM=${TARBALL_CHECKSUM}" >> "GITHUB_ENV"
        echo "::set-output name=tarball_checksum::${TARBALL_CHECKSUM}"

    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.plan.outputs.git_tag }}
        release_name: ${{ steps.plan.outputs.git_tag }}
        body: "Checksum: `${{ steps.checksum.outputs.tarball_checksum }}`"
        draft: false
        prerelease: false

    - id: upload_tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.tarball.outputs.tarball_filepath }}
        asset_name: ${{ steps.tarball.outputs.tarball_filename }}
        asset_content_type: application/gzip
